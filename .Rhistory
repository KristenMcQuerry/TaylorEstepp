##install packages
install.packages("tidyverse")
install.packages("nycflights13")
## load libraries
library(tidyverse)
library(nycflights13)
##install packages
install.packages("tidyverse")
install.packages('reprex')
## load libraries
library(tidyverse)
library(nycflights13)
## dataset for assignment
flights
##### 3
#number of canceled flights per day
flights %>%
group_by(month,day) %>%
summarise(num_cancel=sum(is.na(air_time)))
##### 3
#number of canceled flights per day
can=flights %>%
group_by(month,day) %>%
summarise(num_cancel=sum(is.na(air_time)))
#pattern
ggplot(can,aes(x=day,y=num_cancel,color=month))+
geom_point()
#is proportion of cancelled flights related to the average delay
cancel.flights=flights %>%
group_by(month,day) %>%
summarise(avg_delay=mean(dep_delay,na.rm=T),cancel.prop=sum(is.na(air_time))/length(air_time))
cancel.flights
anova(lm(avg_delay~cancel.prop,data=cancel.flights))
##### 4
#which carrier has worst delays
delays=flights %>%
group_by(carrier) %>%
summarise(avg_delay=mean(dep_delay,na.rm=T)) %>%
arrange(avg_delay)
delays
##### 4
#which carrier has worst delays
delays=flights %>%
group_by(carrier) %>%
summarise(avg_delay=mean(dep_delay,na.rm=T)) %>%
arrange(desc(avg_delay))
delays
#challenge
flights %>%
group_by(carrier,dest) %>%
summarise(n())
anova(lm(dep_delay~carrier+origin,data=flights))
##### 6
#tailnum with worst on time record
flights %>%
group_by(tailnum) %>%
summarise(avg_delay=mean(dep_delay,na.rm=T)) %>%
arrange(avg_delay)
##### 6
#tailnum with worst on time record
flights %>%
group_by(tailnum) %>%
summarise(avg_delay=mean(dep_delay,na.rm=T)) %>%
arrange(desc(avg_delay))
##### 7
#what time should you fly to avoid delays
flights %>%
group_by(hour) %>%
summarise(avg_delay=mean(dep_delay,na.rm=T)) %>%
arrange(avg_delay)
##### 8
#total minutes of delay per destination
flights %>%
group_by(dest) %>%
summarise(total.delay=sum(dep_delay,na.rm=T))
#compute prop of total delay for each row
flights %>%
group_by(dest,carrier) %>%
summarise(total.delay=sum(dep_delay,na.rm=T)) %>%
arrange(carrier)
?sum
#compute prop of total delay for each row
flights %>%
group_by(dest) %>%
mutate(total.delay=sum(dep_delay,na.rm=T))
#compute prop of total delay for each row
flights %>%
group_by(dest) %>%
mutate(total.delay=sum(dep_delay,na.rm=T)) %>%
select(total.delay,carrier,dest,dep_delay)
#compute prop of total delay for each row
flights %>%
group_by(dest) %>%
mutate(total.delay=sum(dep_delay,na.rm=T)) %>%
mutate(delay_prop=dep_delay/total.delay) %>%
select(total.delay,carrier,dest,dep_delay)
#compute prop of total delay for each row
flights %>%
group_by(dest) %>%
mutate(total.delay=sum(dep_delay,na.rm=T)) %>%
mutate(delay_prop=dep_delay/total.delay) %>%
select(total.delay,carrier,dest,dep_delay,delay_prop)
#compute prop of total delay for each row
flights %>%
group_by(dest) %>%
mutate(total.delay=sum(dep_delay,na.rm=T)) %>%
mutate(delay_prop=abs(dep_delay/total.delay)) %>%
select(total.delay,carrier,dest,dep_delay,delay_prop)
#compute prop of total delay for each row
flights %>%
group_by(dest) %>%
mutate(total.delay=sum(dep_delay,na.rm=T)) %>%
mutate(delay_prop=abs(dep_delay/total.delay)) %>%
select(total.delay,carrier,dest,dep_delay,delay_prop) %>%
arrange(dest)
9/3490
##### 9
#suspiciously fast
fast=flights %>%
group_by(dest,origin) %>%
mutate(avg_air=mean(air_time,na.rm=T)) %>%
mutate(fast=air_time/avg_air) %>%
arrange(fast) %>%
select(fast,air_time,avg_air,origin,dest,distance,carrier,flight)
##### 9
#suspiciously fast
flights %>%
group_by(dest,origin) %>%
mutate(avg_air=mean(air_time,na.rm=T)) %>%
mutate(fast=air_time/avg_air) %>%
arrange(fast) %>%
select(fast,air_time,avg_air,origin,dest,distance,carrier,flight)
#most delayed flights in the air
flights %>%
select(sched_dep_time,sched_arr_time,air_time,origin,dest,arr_delay,dep_delay) %>%
mutate(air_delay=arr_delay-dep_delay) %>%
arrange(desc(air_delay))
#most delayed flights in the air
flights %>%
select(sched_dep_time,sched_arr_time,air_time,origin,dest,arr_delay,dep_delay,distance) %>%
mutate(air_delay=arr_delay-dep_delay) %>%
mutate(delay_dist=air_delay/distance) %>%
arrange(desc(air_delay))
#most delayed flights in the air
flights %>%
select(sched_dep_time,sched_arr_time,air_time,origin,dest,arr_delay,dep_delay,distance) %>%
mutate(air_delay=arr_delay-dep_delay) %>%
mutate(delay_dist=air_delay/distance) %>%
arrange(desc(delay_dist))
##### 9
#suspiciously fast
flights %>%
group_by(dest,origin) %>%
mutate(avg_air=mean(air_time,na.rm=T)) %>%
mutate(fast=air_time/avg_air) %>%
arrange(fast) %>%
select(fast,air_time,avg_air,origin,dest,distance,carrier,flight)
##### 9
#suspiciously fast
flights %>%
group_by(dest,origin) %>%
mutate(avg_air=mean(air_time,na.rm=T)) %>%
mutate(fast=air_time/avg_air) %>%
arrange(fast) %>%
select(fast,air_time,avg_air,origin,dest,distance,carrier)
##### 5
#number of flights before first delay >60 NOT DONE
flights %>%
arrange(tailnum,month,day)
##### 5
#number of flights before first delay >60 NOT DONE
flights %>%
arrange(tailnum,month,day) %>%
select(month,day,tailnum,origin,dest,dep_delay)
##### 5
#number of flights before first delay >60 NOT DONE
flights %>%
arrange(month,day) %>%
group_by(tailnum) %>%
select(month,day,tailnum,origin,dest,dep_delay)
##### 5
#number of flights before first delay >60 NOT DONE
flights %>%
arrange(tailnum,month,day) %>%
select(month,day,tailnum,origin,dest,dep_delay)
##### 5
#number of flights before first delay >60 NOT DONE
flights %>%
arrange(tailnum,month,day) %>%
filter(dep_delay<=60) %>%
select(month,day,tailnum,origin,dest,dep_delay)
##### 5
#number of flights before first delay >60 NOT DONE
flights %>%
arrange(tailnum,month,day) %>%
group_by(tailnum) %>%
filter(dep_delay<=60)
##### 5
#number of flights before first delay >60 NOT DONE
flights %>%
arrange(tailnum,month,day) %>%
group_by(tailnum) %>%
filter(dep_delay<=60) %>%
select(month,day,tailnum,origin,dest,dep_delay)
mutate(delay.num=n(dep_delay<=60) %>%
##### 5
#number of flights before first delay >60 NOT DONE
flights %>%
arrange(tailnum,month,day) %>%
group_by(tailnum) %>%
mutate(delay.num=n(dep_delay<=60)) %>%
select(month,day,tailnum,origin,dest,dep_delay)
)
##### 5
#number of flights before first delay >60 NOT DONE
flights %>%
arrange(tailnum,month,day) %>%
group_by(tailnum) %>%
mutate(delay.num=n(dep_delay<=60)) %>%
select(month,day,tailnum,origin,dest,dep_delay)
##### 5
#number of flights before first delay >60 NOT DONE
flights %>%
arrange(tailnum,month,day) %>%
group_by(tailnum) %>%
mutate(delay.num=n_distinct(dep_delay<=60)) %>%
select(month,day,tailnum,origin,dest,dep_delay)
##### 5
#number of flights before first delay >60 NOT DONE
flights %>%
arrange(tailnum,month,day) %>%
group_by(tailnum) %>%
mutate(delay.num=n_distinct(dep_delay<=60)) %>%
select(month,day,tailnum,origin,dest,dep_delay,delay.num)
##### 5
#number of flights before first delay >60 NOT DONE
flights %>%
arrange(tailnum,month,day) %>%
filter(dep_delay<=60,while(dep_delay<=60)) %>%
select(month,day,tailnum,origin,dest,dep_delay,delay.num)
##### 5
#number of flights before first delay >60 NOT DONE
flights %>%
arrange(tailnum,month,day) %>%
filter(dep_delay<=60,while(dep_delay<=60)) %>%
select(month,day,tailnum,origin,dest,dep_delay,delay.num)
## dataset for assignment
flights
##### 3
#number of canceled flights per day
can=flights %>%
group_by(month,day) %>%
summarise(num_cancel=sum(is.na(air_time)))
can
#pattern
ggplot(can,aes(x=day,y=num_cancel,color=month))+
geom_point()
#is proportion of cancelled flights related to the average delay
cancel.flights=flights %>%
group_by(month,day) %>%
summarise(avg_delay=mean(dep_delay,na.rm=T),cancel.prop=sum(is.na(air_time))/length(air_time))
cancel.flights
anova(lm(avg_delay~cancel.prop,data=cancel.flights))
##### 4
#which carrier has worst delays
delays=flights %>%
group_by(carrier) %>%
summarise(avg_delay=mean(dep_delay,na.rm=T)) %>%
arrange(desc(avg_delay))
delays
#challenge
flights %>%
group_by(carrier,dest) %>%
summarise(n())
anova(lm(dep_delay~carrier+origin,data=flights))
##### 5
#number of flights before first delay >60 NOT DONE
flights %>%
arrange(tailnum,month,day)
##### 6
#tailnum with worst on time record
flights %>%
group_by(tailnum) %>%
summarise(avg_delay=mean(dep_delay,na.rm=T)) %>%
arrange(desc(avg_delay))
##### 7
#what time should you fly to avoid delays
flights %>%
group_by(hour) %>%
summarise(avg_delay=mean(dep_delay,na.rm=T)) %>%
arrange(avg_delay)
##### 8
#total minutes of delay per destination
flights %>%
group_by(dest) %>%
summarise(total.delay=sum(dep_delay,na.rm=T))
#compute prop of total delay for each row
flights %>%
group_by(dest) %>%
mutate(total.delay=sum(dep_delay,na.rm=T)) %>%
mutate(delay_prop=abs(dep_delay/total.delay)) %>%
select(total.delay,carrier,dest,dep_delay,delay_prop) %>%
arrange(dest)
##### 9
#suspiciously fast
flights %>%
group_by(dest,origin) %>%
mutate(avg_air=mean(air_time,na.rm=T)) %>%
mutate(fast=air_time/avg_air) %>%
arrange(fast) %>%
select(fast,air_time,avg_air,origin,dest,distance,carrier)
#most delayed flights in the air
flights %>%
select(sched_dep_time,sched_arr_time,air_time,origin,dest,arr_delay,dep_delay,distance) %>%
mutate(air_delay=arr_delay-dep_delay) %>%
mutate(delay_dist=air_delay/distance) %>% #minutes per mile in the air lost
arrange(desc(delay_dist))
